// Code generated by MockGen. DO NOT EDIT.
// Source: ./auth.go

// Package services is a generated GoMock package.
package services

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/remove158/chula-sso/cmd/models"
)

// MockIAuthService is a mock of IAuthService interface.
type MockIAuthService struct {
	ctrl     *gomock.Controller
	recorder *MockIAuthServiceMockRecorder
}

// MockIAuthServiceMockRecorder is the mock recorder for MockIAuthService.
type MockIAuthServiceMockRecorder struct {
	mock *MockIAuthService
}

// NewMockIAuthService creates a new mock instance.
func NewMockIAuthService(ctrl *gomock.Controller) *MockIAuthService {
	mock := &MockIAuthService{ctrl: ctrl}
	mock.recorder = &MockIAuthServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIAuthService) EXPECT() *MockIAuthServiceMockRecorder {
	return m.recorder
}

// PostLogin mocks base method.
func (m *MockIAuthService) PostLogin(user models.UserResponse) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PostLogin", user)
	ret0, _ := ret[0].(string)
	return ret0
}

// PostLogin indicates an expected call of PostLogin.
func (mr *MockIAuthServiceMockRecorder) PostLogin(user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PostLogin", reflect.TypeOf((*MockIAuthService)(nil).PostLogin), user)
}

// ServiceValidation mocks base method.
func (m *MockIAuthService) ServiceValidation(arg0 models.ServiceValidateRequest) (models.UserResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ServiceValidation", arg0)
	ret0, _ := ret[0].(models.UserResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ServiceValidation indicates an expected call of ServiceValidation.
func (mr *MockIAuthServiceMockRecorder) ServiceValidation(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ServiceValidation", reflect.TypeOf((*MockIAuthService)(nil).ServiceValidation), arg0)
}
